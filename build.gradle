plugins {
  id "com.gradle.publish" version "0.9.7"
}

apply plugin: 'groovy'
apply plugin: 'idea'

group = 'com.bmuschko'
version = '2.0.2'
defaultTasks 'clean', 'build'

sourceSets {
    integrationTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + compileClasspath
    }
}

task integrationTest(type: Test, dependsOn: test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest

repositories {
    mavenCentral()
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude group: 'org.codehaus.groovy'
    }
    //clover 'com.cenqua.clover:clover:3.2.0'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Clover plugin',
                   'Implementation-Version': version,
                   'Built-By': System.getProperty("user.name"),
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty("java.version")
    }
}

idea.project {
    jdkName = '1.6'

    ipr.withXml { provider ->
        def node = provider.asNode()

        // Use GIT
        def vcsConfig = node.component.find { it.'@name' == 'VcsDirectoryMappings' }
        vcsConfig.mapping[0].'@vcs' = 'Git'

        // Set Gradle home
        def gradleSettings = node.appendNode('component', [name: 'GradleSettings'])
        gradleSettings.appendNode('option', [name: 'SDK_HOME', value: gradle.gradleHomeDir])
    }
}

idea.module {
    testSourceDirs += file('src/integTest/groovy')
}

/*clover {
    report {
        html = true
    }
}*/

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier 'groovydoc'
    from groovydoc.destinationDir
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives groovydocJar
    archives javadocJar
}

pluginBundle {
	description = 'Gradle plugin for generating a code coverage report using Clover.'
	website = 'https://github.com/bmuschko/gradle-clover-plugin'
	vcsUrl = 'https://github.com/bmuschko/gradle-clover-plugin'
	plugins {
		clover {
			id = 'com.bmuschko.clover'
			displayName = 'Gradle Clover plugin'
		}
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}